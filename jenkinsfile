pipeline {
    agent any
    stages {
        stage('Build') {
            steps {
                echo 'Building the code using Maven.'
            }
        }
        stage('Unit and Integration Tests') {
            steps {
                echo 'Running tests using JUnit for unit testing and Selenium for integration testing.'
            }
        }
        stage('Code Analysis') {
            steps {
                echo 'Analyzing code with SonarQube.'
            }
        }
        stage('Security Scan') {
            steps {
                echo 'Performing security scan with OWASP ZAP.'
            }
        }
        stage('Deploy to Staging') {
            steps {
                echo 'Deploying application to AWS EC2 staging instance.'
            }
        }
        stage('Integration Tests on Staging') {
            steps {
                echo 'Running integration tests in the staging environment.'
            }
        }
        stage('Deploy to Production') {
            steps {
                echo 'Deploying application to AWS EC2 production instance.'
            }
        }
    }
    post {
        success {
            emailext mimeType: 'text/html',
                     attachLog: true,
                     attachmentsPattern: '**/*.log',
                     body: 'The pipeline has succeeded.',
                     subject: "Pipeline Success: ${env.JOB_NAME} #${env.BUILD_NUMBER}",
                     mail to: 'tharakasandamal18@gmail.com'
        }
        failure {
            emailext mimeType: 'text/html',
                     attachLog: true,
                     attachmentsPattern: '**/*.log',
                     body: 'The pipeline has failed.',
                     subject: "Pipeline Failure: ${env.JOB_NAME} #${env.BUILD_NUMBER}",
                     mail to: 'tharakasandamal18@gmail.com'
        }
    }
}
